services:
  app:
    build: .
    image: book-notes:latest
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3000
      - USE_REACT=true
      # Use external URLs when provided in .env; fallback to local services only if set there
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - METRICS_TOKEN=${METRICS_TOKEN}
    restart: unless-stopped

  postgres:
    image: pgvector/pgvector:pg16
    profiles: ["local"]
    environment:
      - POSTGRES_DB=booknotes
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres-init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    restart: unless-stopped

  redis:
    image: redis:7.4-alpine
    profiles: ["local"]
    ports:
      - "6380:6379"
    volumes:
      - redisdata:/data
    command: ["redis-server", "--save", "300", "100", "--appendonly", "yes"]
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.54.1
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=7d
      - --storage.tsdb.retention.size=1GB
    volumes:
      - promdata:/prometheus
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    secrets:
      - metrics_token
    depends_on:
      - app
    restart: unless-stopped

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.103.0
    command:
      - -retentionPeriod=14d
    ports:
      - "8428:8428"
      - "8429:8429"
    volumes:
      - vmdata:/victoria-metrics-data
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.1.3
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER__FILE=/run/secrets/grafana_admin_user
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_admin_password
    volumes:
      - grafanadata:/var/lib/grafana
      - ./docker/grafana-provisioning:/etc/grafana/provisioning:ro
      - ./grafana:/var/lib/grafana/dashboards:ro
    secrets:
      - grafana_admin_user
      - grafana_admin_password
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  promdata:
  grafanadata:
  vmdata:

secrets:
  metrics_token:
    file: ./docker/metrics_token
  grafana_admin_user:
    file: ./docker/grafana_admin_user
  grafana_admin_password:
    file: ./docker/grafana_admin_password
